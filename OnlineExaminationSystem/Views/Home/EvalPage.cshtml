@model OnlineExaminationSystem.Models.QuestionModel
@{
    var totalQuestion = Model.TotalQuestionInSet;
    var endTime = ((DateTime)ViewBag.TimeExpire);
    var timeRemaining = TimeSpan.FromTicks(endTime.Ticks - DateTime.UtcNow.Ticks).TotalSeconds.ToString("#");
}

<div class="row">
    <div class="col-md-12">
        <div class="question-number">Question : @(Model.QuestionNumber)</div>
        <div>Time Remaining : <span id="minRemaining"></span>:<span id="secRemaining"></span></div>
    </div>
</div>

@using (Html.BeginForm("PostAnswer", "Home", FormMethod.Post, new { @id = "form" }))
{
    <input type="hidden" name="direction" value="forward"/>
    <input type="hidden" name="Token" value="@(Session["TOKEN"])" />
    <input type="hidden" name="TestId" value="@(Model.TestId)" />
    <input type="hidden" name="QuestionId" value="@(Model.QuestionNumber)" />



    <div class="row">
        <div class="col-md-10">
            <table>
                <tr>


                    <td><a href="javascript:void(0);" class="btn btn-primary" onclick="saveBackward(this);"><< Save & Previous</a></td>
                    <td><a href="@Url.Action("EvalPage", new { @token = Session["TOKEN"], @tid = Session["TESTID"], @qno = (Model.QuestionNumber)-1 })" class="btn btn-default bg-primary">|<< Prev</a></td>

                    @for (int i = 0; i < Model.TotalQuestionInSet; i++)
                    {
                        <td><a href="@Url.Action("EvalPage", new {@token=Session["TOKEN"],@tid=Session["TESTID"], @qno=(i+1)})" class="btn btn-default bg-primary"> @(i + 1) </a></td>
                    }
                    <td><a href="@Url.Action("EvalPage", new {@token=Session["TOKEN"],@tid=Session["TESTID"], @qno=(Model.QuestionNumber)+1})" class="btn btn-default bg-primary">Next >>|</a></td>
                    <td><a href="javascript:void(0);" class="btn btn-primary" onclick="saveForward(this);">Save & Next >></a></td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10">
            <p>
                <br />
                @Html.Raw(Model.Question ?? "")
            </p>
            @switch (Model.QuestionType)
            {
                case "RADIO":
                    <div class="prelude">Choose the correct answer</div>
                    <ul class="js_choices">
                        @for (int i = 0; i < Model.options.Count; i++)
                        {
                            <li>
                                <input type="hidden" name="UserChoices[@i].ChoiceId" value="@(Model.options[i].ChoiceId)" />
                                <input type="radio" name="UserChoices[@i].IsChecked" value="@(!string.IsNullOrEmpty(Model.options[i].Label)? "on":"off" ) " />
                                <span class="code">@Html.Raw(Model.options[i].Label.Replace("[", "&lt;").Replace("]", "&gt;"))</span>
                            </li>
                        }
                    </ul>

                    <input type="hidden" name="Answer" value="no data" />
                    break;


                case "MULTIPLE":
                    <div class="prelude">Choose all that is correct</div>
                    <ul class="js_choices">
                        @for (int i = 0; i < Model.options.Count; i++)
                        {
                            <li>
                                <input type="hidden" name="UserChoices[@i].ChoiceId" value="@(Model.options[i].ChoiceId)" />
                                <input type="checkbox" name="UserChoices[@i].IsChecked" value="@((!string.IsNullOrEmpty(Model.options[i].Label))? "true":"false" ) " />
                                <span class="code">@Html.Raw(Model.options[i].Label.Replace("[", "&lt;").Replace("]", "&gt;"))</span>
                            </li>
                        }
                    </ul>
                    <input type="hidden" name="Answer" value="no data" />
                    break;


                case "TEXT":
                    <div>
                        Write your thoughts

                        <p>

                            <input type="hidden" name="UserChoices[0].ChoiceId" value="@Model.options[0].ChoiceId" />
                            <textarea name="Answer" class="form-control">@(Model.options[0].Answer)</textarea>
                        </p>
                    </div>
                    break;
            }
        </div>

    </div>

}

<script>

    var remSeconds = @timeRemaining;
    var secondsCounter = remSeconds % 60;

    function formatNumber(number)
    {
        if (number < 10) return '0' + number;
        else return '' + number;
    }

    function startTick()
    {
        document.getElementById('secRemaining').innerText = formatNumber(secondsCounter);
        document.getElementById('minRemaining').innerText = formatNumber(parseInt(remSeconds / 60));

        var _tick = setInterval(function ()
        {
            if (remSeconds > 0)
            {
                remSeconds = remSeconds - 1;
                secondsCounter = secondsCounter - 1;
                document.getElementById('secRemaining').innerText = formatNumber(secondsCounter);
                document.getElementById('minRemaining').innerText = formatNumber(parseInt(remSeconds / 60));

                if (secondsCounter == 0)
                    secondsCounter = 60;
            }

            else {
                alert("Your Exam time has expired !!!");
                clearInterval(_tick);
            }
        }, 1000);

    }

    startTick();


    function saveForward(sender) {
        $('#direction').val('forward');
        document.getElementById('form').submit();
    }
    function saveBackward(sender) {
        $('#direction').val('backward');
        document.getElementById('form').submit();
    }
</script>